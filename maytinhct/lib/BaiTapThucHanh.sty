b1 + 2
// Online C++ compiler to run C++ program online
#include <iostream>

class GradeBook {
    private:
        char tenmonhoc[30];
    public:
        GradeBook(){}
        void displayMessenger(){
            std::cout << " Welcome to GradeBook!" << std::endl;
            std::cout << "Nhap vao ten mon hoc: ";
            std::cin >>  tenmonhoc;
            std::cout << "Chao mung ban den voi khoa hoc : " << tenmonhoc;
        }
};

int main() {
    GradeBook a = GradeBook();
    a.displayMessenger();
    return 0;
}


 ================================================================

 b3

 // Online C++ compiler to run C++ program online
#include <iostream> 
#include <string> 
using namespace std; 
class GradeBook {
  private:
    // Private attribute
    string courseName;

  public:
    GradeBook(){}
    GradeBook(string courseName){
        this -> courseName;
    }
    
    // Setter
    void setcourseName(string s) {
      courseName = s;
    }
    // Getter
    string getcourseName() {
      return courseName;
    }
    
    void displayMessenger(){
        cout << "Chao mung ban den vs khoa hoc : " << courseName;
    }
};
int main() {
    GradeBook a = GradeBook();
    a.setcourseName("Lap trinh c++");
    a.displayMessenger();
    return 0;
}

================================================================
--------------------------------------------------------------------------------------------------
b4

/ Online C++ compiler to run C++ program online
#include <iostream> 
#include <string> 
using namespace std; 
class Employee {
  private:
    // Private attribute
    string ho;
    string ten;
    double luong;
  public:
    Employee(){
        ho = "Tran";
        ten="Longvu";
        luong= 0.0;
    };
    // Setter
    void setho(string s) {
      ho = s;
    }
    // Getter
    string getho() {
      return ho;
    }
    // Setter
    void setten(string s) {
      ten = s;
    }
    // Getter
    string getten() {
      return ten;
    }
    // Setter
    void setluong(double s) {
        if(luong < 0){
            luong= 0.0;
        }
        else{
        luong = s;
        }
        
    }
    // Getter
    double getluong() {
      return luong;
    }
    void theluong(){
        cout << "Luong thang cua " << ho << " " << ten << " la : "  << luong << "$"<<endl; 
    }
    double tangluong(){
        return (luong+=luong * 0.1);
    }
};
int main() {
    Employee quang = Employee();
    Employee Longvudeptrai = Employee();
    quang.setluong(1.0);
    quang.tangluong();
    quang.setten("Minh Quang");
    quang.setho("Vu");
    quang.theluong();
    Longvudeptrai.setho("Tran");
    Longvudeptrai.setten("Long vu");
    Longvudeptrai.setluong(100000.0);
    Longvudeptrai.tangluong();
    Longvudeptrai.theluong();
    return 0;
}


================================================================

b6

#include <iostream>
using namespace std;
class sp
{
private:
    double a;
    double b;
public:
    void nhapsl()
    {
        cout << "\n nhap phan thuc :"; cin >> a;
        cout << " nhap phan ao :"; cin >> b;
    }
    void insl()
    {
        cout << "\n phan thuc la :" << a;
        cout << "\n phan ao la :" << b << "\n";
    }
    sp cong(sp u2)
    {
        sp u;
        u.a = a + u2.a;
        u.b = this->b + u2.b;
        return u;
    }
    sp tru(sp u2)
    {
        sp u;
        u.a = a - u2.a;
        u.b = this->b - u2.b;
        return u;
    }
};
int main()
{
    sp ucong, utru, u1, u2;
    cout << "\n nhap so phuc thu nhat "; u1.nhapsl();
    cout << "\n nhap so phuc thu thu 2 "; u2.nhapsl();
    cout << "\n so phuc tong :";
     ucong = u1.cong(u2); ucong.insl();
    cout << "\n so phuc hieu :";
     utru = u1.tru(u2); utru.insl();
    system("pause");
}



================================================================

b7


#include <iostream>
#include <algorithm>
 
using namespace std;
 
class PhanSo{
    private:
        int tu;
        int mau;
    public:
     
        PhanSo(){}
        PhanSo(int tu, int mau){
            this->tu = tu;
            this->mau = mau;
        }
         
        void nhap(){
            cout<<"Nhap tu so: ";
            cin>>this->tu;
             
            cout<<"Nhap mau so: ";
            cin>>this->mau;    
        }
        void xuat(){
            cout<<this->tu<<"/"<<this->mau;
        }
        bool check(){
            if(this->tu == 0 || this->mau == 0)
               return false;
            return true;
        }
        void rutGon(){
            int usc = abs(__gcd(abs(this->tu), abs(this->mau)));
            this->tu = this->tu/usc;
            this->mau = this->mau/usc;
        }
        void quyDong(PhanSo &b){
            this -> rutGon();
            b.rutGon();
             
            this->tu =  this->tu * b.mau;
            b.tu = b.tu * this->mau;
             
            this->mau = b.mau  = this->mau * b.mau;
        }
        PhanSo congPhanSo(PhanSo b){
            this->quyDong(b);
            PhanSo c;
            c.tu = this->tu + b.tu;
            c.mau = this->mau;
            c.rutGon();
            return c;
        }
         
        PhanSo truPhanSo(PhanSo b){
            this->quyDong(b);
            PhanSo c;
            c.tu = this->tu - b.tu;
            c.mau = this->mau;
            c.rutGon();
            return c;
        }
        PhanSo nhanPhanSo(PhanSo b){
            PhanSo c;
            c.tu = this->tu * b.tu;
            c.mau = this->mau * b.mau;
            c.rutGon();
            return c;
        }
        PhanSo chiaPhanSo(PhanSo b){
            PhanSo c;
            c.tu = this->tu * b.mau;
            c.mau = this->mau + b.tu;
            c.rutGon();
            return c;
        }
         
        void setTu(int tu){
            this->tu = tu;
        }
            void setMau(int mau){
            this->tu = mau;
        }
        int getTu(){
            return this->tu;
        }
        int getMau(){
            return this->mau;
        }
        
};

        

int main()
{
    PhanSo A;
    PhanSo B;
 
    cout<<"Nhap phan so A\n";
    A.nhap();
    /*
    
    */
    B.nhap(); 
    cout<<"-------------XUAT-------\n";
    cout<<"Phan so A: ";
    A.xuat();
    cout<<"\nPhan so B: ";
    B.xuat();
     
    if(A.check() == false){
        cout<<"\n=>Phan so A kh hop le";
        return 0;
    }
    if(B.check() == false){
        cout<<"\n=>Phan so A kh hop le";
        return 0;
    }
     
    cout<<"\n\n-------------RUT GON PHAN SO-------\n";
    printf("Phan so A: ");
    A.rutGon();
    A.xuat();
    printf("\nPhan so B: ");
    B.rutGon();
    B.xuat();
     
    cout<<"\n\n-------------QUY DONG PHAN SO-------\n";
    printf("Phan so A: ");
    A.quyDong(B);
    A.xuat();
    printf("\nPhan so B: ");
    B.xuat();
     
     
    cout<<"\n\n-------------CONG HAI PHAN SO-------\n";
    printf("Tong phan so: ");
    PhanSo tong = A.congPhanSo(B);
    tong.xuat();
     
     
    cout<<"\n\n-------------TRU HAI PHAN SO-------\n";
    printf("hieu phan so: ");
    PhanSo hieu = A.truPhanSo(B);
    hieu.xuat();
     
    cout<<"\n\n-------------NHAN HAI PHAN SO-------\n";
    printf("Tong phan so: ");
    PhanSo tich = A.nhanPhanSo(B);
    tich.xuat();
     
    cout<<"\n\n-------------CHIA HAI PHAN SO-------\n";
    printf("Tong phan so: ");
    PhanSo thuong = A.chiaPhanSo(B);
    thuong.xuat();
    return 0;
}